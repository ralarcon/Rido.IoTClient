//  <auto-generated/> 

using dtmi_azure_devicemanagement;
using MQTTnet.Client;
using Rido.IoTClient;
using Rido.IoTClient.AzIoTHub;
using Rido.IoTClient.AzIoTHub.TopicBindings;

namespace dtmi_rido_pnp_sample
{
    public class memmon : HubClient
    {
        const string modelId = "dtmi:rido:pnp:sample:memmon;1";

        public Component<DeviceInformation> Component_deviceInfo;
        public Component<dtmi_rido_pnp_sample.pnp_memmon_1> Component_memMon;
 
        private memmon(IMqttClient c) : base(c)
        {
            Component_deviceInfo = new deviceInfoComponent(c, "deviceInfo");
            Component_memMon = new memMonComponent(c, "memMon");
        }

        public static async Task<memmon> CreateDeviceClientAsync(string connectionString, CancellationToken cancellationToken)
        {
            var cs = new ConnectionSettings(connectionString) { ModelId = modelId };
            var mqtt = await HubClient.CreateAsync(cs, cancellationToken);
            var client = new memmon(mqtt.Connection) { ConnectionSettings = cs };
            client.InitialTwin = await client.GetTwinAsync();
            return client;
        }
    }
}
